#!/usr/bin/env python
# -*- coding: UTF-8 -*-

from pwnlib.tubes.remote import remote
from pwnlib import context
import sys
import json
import base64
import traceback

context.log_level = 'error'

def solve_pow(challenge, prefix):
  resp = 0
  while True:
    if hashlib.sha256(prefix + str(resp)).hexdigest().startswith(challenge):
      return str(resp)
    resp += 1

def get_flag(ip, port, flag_id, token):
  r = remote(ip, port)
  # 1. Reads the secret
  r.sendlineafter('yellow-submarine$ ', 'read')
  r.sendlineafter('> ', token)

  r.recvuntil('Hey. This is your secret:\n')
  flag = base64.b64decode(r.recvline())
  pad_char = ord(flag[-1])
  flag = flag[:-pad_char]

  # 2. Exit
  r.sendlineafter('yellow-submarine$ ', 'exit')
  r.close()
  
  return {
    'error': 0,
    'error_msg': '',
    'payload': {
      'flag': flag
    }
  }

if __name__ == '__main__':
  try:
    print json.dumps(get_flag(sys.argv[1], int(sys.argv[2]), sys.argv[3], sys.argv[4]))
  except Exception as e:
    response = {
      'error': 1,
      'error_msg': str(e) + "\n" + traceback.format_exc(),
      'payload': {}
    }
    print json.dumps(response)
